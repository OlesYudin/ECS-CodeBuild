name: APP builder CI/CD

on:
  push:
    branches: [ main ]
  # Run workflow manualy
  # workflow_dispatch:

jobs:
  docker-build:
  
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2
    # Configuration AWS Credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    # # Use spesific tags for docker images
    # - name: Docker meta tag
    #   id: meta
    #   uses: docker/metadata-action@v3
    #   with:
    #     tags: |
    #       type=raw,value=action-{{date 'DD-MM-YYYY'}}-{{branch}}-{{sha}}

    # Login to ECR
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Build docker image and push to ECR
    - name: Build docker image and push to AWS ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: test
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./App
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
    # Download task defenition from ECS
    - name: Download task definition
      run: |
        ws ecs describe-task-definition --task-definition password_generator-dev-task-definition --query taskDefinition > task-definition.json
      
    # Copy new image ID of docker container to AWS ECS task definition
    - name: Copy new docker container to AWS ECS
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: Passwd-gen
        image: ${{ steps.build-image.outputs.image }}
      
    # Run new AWS ECS task definition
    - name: Deploy AWS ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: password_generator-dev-service
        cluster: password_generator-dev-cluster
        wait-for-service-stability: true